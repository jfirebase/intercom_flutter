# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # job for plugin intercom_flutter
  intercom_flutter:
    runs-on: ubuntu-latest
    env:
      source-directory: ./intercom_flutter

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    
    # Download all Flutter packages
    - name: Download dependencies
      run: flutter pub get
      working-directory: ${{env.source-directory}}

    # Run Flutter Analyzer
    - name: Run Flutter Analyzer
      run: flutter analyze
      working-directory: ${{env.source-directory}}

    # Run all unit-tests with code coverage
    - name: Run unit tests
      run: flutter test --coverage
      working-directory: ${{env.source-directory}}

  # job for plugin intercom_flutter_platform_interface
  intercom_flutter_platform_interface:
    runs-on: ubuntu-latest
    env:
      source-directory: ./intercom_flutter_platform_interface

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    
    # Download all Flutter packages
    - name: Download dependencies
      run: flutter pub get
      working-directory: ${{env.source-directory}}

    # Run Flutter Analyzer
    - name: Run Flutter Analyzer
      run: flutter analyze
      working-directory: ${{env.source-directory}}

    # Run all unit-tests with code coverage
    - name: Run unit tests
      run: flutter test --coverage
      working-directory: ${{env.source-directory}}